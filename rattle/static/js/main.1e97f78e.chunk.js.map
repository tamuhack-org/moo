{"version":3,"sources":["assets/arrowleft.svg","assets/arrowright.svg","assets/isymbol.svg","assets/logout.svg","assets/magnifying.svg","Components/toast.tsx","Pages/Login/Login.tsx","redux/actions/authActions.ts","Pages/ConfirmModal/ConfirmModal.tsx","redux/actions/selectionActions.ts","Components/navbar.tsx","Pages/QRScan/QRScan.tsx","Pages/Selection/Selection.tsx","Pages/Search/Search.tsx","Pages/Routes.tsx","serviceWorker.ts","redux/reducers/authReducer.ts","redux/reducers/selectionReducer.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx","assets/hiss_full_logo.svg","assets sync /^/.*/.svg$","assets/hiss.svg"],"names":["module","exports","commonToastProperties","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Login","props","emailHandler","event","setState","email","target","value","passwordHandler","password","bind","state","submitColor","redirectToSelection","this","login","then","error","toast","success","onClose","to","style","pageContainer","formContainer","titleContainer","logoContainer","src","require","fontSize","type","placeholder","onChange","inputContainer","Button","onClick","submitContainer","backgroundColor","React","PureComponent","display","marginLeft","height","width","alignItems","marginTop","marginBottom","flexDirection","paddingLeft","paddingRight","outline","color","border","connect","isLoggedIn","auth","isLoading","userData","dispatch","axios","post","headers","response","catch","loginFailed","actions","ConfirmModal","getRegisteredStatus","a","async","registeredStatus","foodRestrictions","applicationStatus","modalVisible","checkInStatusUrl","get","authorization","data","token","dismiss","checked_in","warn","status","console","log","restrictions","exception","registerFood","qrData","attribute","new_meal_name","registerWorkshop","checkInUser","participantRegistered","checkInEvent","disableSubmit","registrationStatus","disableStatus","eventName","buttonTitle","modalContainer","visible","closeModal","animation","customStyles","justifyContent","badgeContainer","Badge","marginRight","padding","fontWeight","first_name","last_name","emailRow","margin","checkInStatusRow","borderColor","block","confirmButton","disabled","borderWidth","borderStyle","paddingTop","paddingBottom","borderBottom","selection","updateSelection","selectionSuccess","TopNavbar","redirect","redirectRoute","logout","onLeftPress","leftRedirect","onRightPress","rightRedirect","onMiddlePress","middleRedirect","leftIconSrc","rightIconSrc","leftIcon","leftRedirectRoute","rightRedirectRoute","alt","className","undefined","rightIcon","Navbar","navSpacing","Brand","QRScan","handleScan","confirmVisible","qrObj","JSON","parse","Object","prototype","hasOwnProperty","call","switchCamera","frontCamera","show","hide","eventSelectChange","option","val","attributeSelectChange","determineAttributes","foodChoices","label","options","delay","redirectToLogin","cameraString","eventOptions","attributeOptions","formatGroupLabel","groupStyles","groupBadgeStyles","length","selectionContainer","halfContainer","isClearable","isSearchable","styles","menu","provided","zIndex","defaultValue","filter","v","isDisabled","alignSelf","onScan","facingMode","switchCameraContainer","borderRadius","lineHeight","minWidth","textAlign","Selection","handleScanSubmit","redirectToScan","showModal","setParticipantData","user","participantData","nameHandler","name","handleSearchSubmit","responseData","results","users","displayUsers","InputGroup","FormControl","size","map","index","borderTop","key","float","viewBox","d","fill","Routes","basename","path","component","Search","Component","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","persistConfig","storage","reducers","persistReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.1e97f78e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowleft.05e4d747.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowright.354874ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/isymbol.3c20c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.354874ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying.0874efde.svg\";","var commonToastProperties: object = {\r\n    position: \"bottom-center\",\r\n    autoClose: 1500,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true\r\n}\r\n\r\nexport {\r\n    commonToastProperties\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/authActions';\r\nimport { LoginData } from '../../types/TypeObjects';\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {commonToastProperties} from './../../Components/toast';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\ninterface IProps {\r\n  isLoggedIn: boolean;\r\n  isLoading: boolean;\r\n  userData: LoginData;\r\n  error: string;\r\n  login: (email: string, password: string) => Promise<object>;\r\n  logout: () => void;\r\n}\r\n\r\ninterface IState {\r\n  email: string;\r\n  password: string;\r\n  submitColor: string;\r\n  redirectToSelection: boolean;\r\n}\r\n\r\nclass Login extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.emailHandler = this.emailHandler.bind(this);\r\n    this.passwordHandler = this.passwordHandler.bind(this);\r\n    this.state = {\r\n      email: \"\", \r\n      password: \"\", \r\n      submitColor: '#FF7C93', \r\n      redirectToSelection: false \r\n    };\r\n  }\r\n\r\n  login() {\r\n    this.props.login(this.state.email, this.state.password).then(() => {\r\n      if(this.props.error) {\r\n        toast.error(\"Login Failed\", commonToastProperties);\r\n      } else {\r\n        toast.success(\"Login Successful\", {\r\n          ...commonToastProperties, \r\n          onClose: () => this.setState({ redirectToSelection: true })\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  emailHandler = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  passwordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { redirectToSelection } = this.state;\r\n    \r\n    if(redirectToSelection) {\r\n      return (\r\n        <Redirect to='/select'/>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={style.pageContainer}>\r\n        <form style={style.formContainer}>\r\n          <div style={style.titleContainer}>\r\n            <img\r\n              style={style.logoContainer}\r\n              src={require(\"../../assets/hiss_full_logo.svg\")}\r\n            />\r\n            <p style={{ fontSize: '18px' }}>by tamuhack</p>\r\n          </div>\r\n          <input\r\n            type='text'\r\n            placeholder='Email'\r\n            value={this.state.email}\r\n            onChange={this.emailHandler}\r\n            style={style.inputContainer}\r\n          />\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password}\r\n            onChange={this.passwordHandler}\r\n            style={style.inputContainer}\r\n          />\r\n\r\n          <Button\r\n            onClick={() => this.login()}\r\n            style={{...style.submitContainer, backgroundColor: this.state.submitColor}}\r\n          >\r\n            Login\r\n          </Button>\r\n\r\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\r\n          {/* {failureToast}\r\n          {successToast}\r\n          {console.log(failureToast, successToast)} */}\r\n          <ToastContainer autoClose={1500} />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style : { [key: string]: React.CSSProperties } = {\r\n  logoContainer : {\r\n    display: 'flex',\r\n    marginLeft: '-10px',\r\n    height: '56px'\r\n  },\r\n  pageContainer : {\r\n    display: 'flex',\r\n    height: '100vh',\r\n    width: '100vw',\r\n    alignItems: 'center',\r\n  },\r\n  titleContainer: {\r\n    marginTop: '27vh',\r\n    marginBottom: '40px',\r\n    width: '80vw'\r\n  },\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100vw',\r\n    paddingLeft: '10vw',\r\n    paddingRight: '10vw',\r\n    height: '100vh',\r\n  },\r\n  inputContainer: {\r\n    height: '57px',\r\n    width: '80vw',\r\n    paddingLeft: '4%',\r\n    marginBottom: '3vh',\r\n    fontSize: 17,\r\n    outline: 'none'\r\n  },\r\n  submitContainer: {\r\n    height: '57px',\r\n    width: '80vw',\r\n    marginTop: '3vh',\r\n    color: 'white',\r\n    fontSize: 20,\r\n    border: 0\r\n  },\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  isLoading: state.auth.isLoading,\r\n  userData: state.auth.userData,\r\n  error: state.auth.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (email:string, password:string) => dispatch(actions.login(email, password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import axios from 'axios';\r\nimport { AppActions } from '../../types/actions';\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const isLoading = ( loading: boolean ): AppActions => ({\r\n  type: 'LOGIN_ATTEMPT',\r\n  isLoading: loading\r\n});\r\n\r\nexport const loginSuccess = ( userData: object ): AppActions => ({\r\n  type: 'LOGIN_SUCCESS',\r\n  userData\r\n});\r\n\r\nexport const loginFailed = ( error: object ): AppActions => ({\r\n  type: 'LOGIN_FAILED',\r\n  error\r\n});\r\n\r\nexport const logoutComplete = (): AppActions => ({\r\n  type: 'LOGOUT'\r\n});\r\n\r\nexport const logout = () => {\r\n  return (dispatch: Dispatch<AppActions>) => {\r\n    dispatch(logoutComplete());\r\n  }\r\n};\r\n\r\nexport const login = (email: string, password: string) => {\r\n  return (dispatch: Dispatch<AppActions>) => {\r\n    // dispatch(isLoading(true));\r\n\r\n    return axios.post(\r\n      'https://register.tamuhack.com/api/volunteer/login',\r\n      {\r\n         email: email,\r\n         password: password,\r\n      },\r\n      {\r\n         headers: {\r\n           'content-type': 'application/json',\r\n         }\r\n      }\r\n    ).then(response => {\r\n      dispatch(loginSuccess(response));\r\n    }).catch(error => {\r\n      dispatch(loginFailed(error));\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { LoginData, QRData } from '../../types/TypeObjects';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {commonToastProperties} from './../../Components/toast';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\ninterface IProps {\r\n  userData: LoginData;\r\n  event: string;\r\n  attribute: string;\r\n\r\n  qrData: QRData;\r\n  modalVisible: boolean;\r\n  closeModal: () => void;\r\n}\r\n\r\ninterface IState {\r\n  participantRegistered: boolean;\r\n  foodRestrictions: string;\r\n  applicationStatus: string;\r\n  disableSubmit: boolean;\r\n}\r\n\r\nclass ConfirmModal extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {participantRegistered: false, foodRestrictions: \"None\", applicationStatus: \"\", disableSubmit: false};\r\n  }\r\n\r\n  getRegisteredStatus = async (email: string) : Promise<{registeredStatus, foodRestrictions, applicationStatus}> => {\r\n    let registeredStatus = false;\r\n    let foodRestrictions = \"None\";\r\n    let applicationStatus = \"L\"\r\n\r\n    if (!this.props.modalVisible) {\r\n      return {registeredStatus, foodRestrictions, applicationStatus};\r\n    }\r\n\r\n    var checkInStatusUrl = \"https://register.tamuhack.com/api/volunteer/summary?email=\" + email;\r\n    await axios.get(\r\n      checkInStatusUrl,\r\n      {\r\n         headers: {\r\n           'content-type': 'application/json',\r\n           authorization: 'Token ' + this.props.userData.data.token\r\n         },\r\n      }\r\n    ).then(response => {\r\n      // Potential Bug: This route gets sent two times. \r\n      // This makes the toast kind of look ugly. Not critical though\r\n      toast.dismiss(); // Prevents a second toast from sending\r\n      if(!response.data.checked_in && this.props.event != \"checked_in\") {\r\n        // Set to top-center to make it look nicer. Optional\r\n        toast.warn(\"User is not checked in. Contact Director!\", {...commonToastProperties, autoClose: 4000});\r\n      }\r\n\r\n      if(\r\n        this.props.event == \"checked_in\" &&\r\n        !(response.data.status == \"I\" || response.data.status == \"C\")\r\n      ) {\r\n        toast.warn(\"User not authorized. Contact Director!\", {...commonToastProperties, autoClose: 5000});\r\n      }\r\n\r\n      console.log(\">>>\", this.props, response.data)\r\n      // &&\r\n        // this.props.attribute.toLowerCase() != response.data.restrictions.toLowerCase() \r\n      \r\n      if (\r\n        this.props.event != \"checked_in\" && \r\n        this.props.event != \"WorkshopEvent\" \r\n        // !(this.props.attribute.toLowerCase() == 'none' && response.data.restrictions.toLowerCase() == 'other')\r\n      ) {\r\n        // Set to top-center to make it look nicer. Optional\r\n        // toast.warn(\"Food restrictions don't match. Notify Hacker!\", {...commonToastProperties, autoClose: 4000, position:\"top-center\"});\r\n      }\r\n      registeredStatus = response.data.checked_in;\r\n      foodRestrictions = response.data.restrictions;\r\n      applicationStatus = response.data.status;\r\n    }).catch(exception => {\r\n      console.log(\"EXCEPTION!\", exception)\r\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\r\n    });\r\n\r\n    return {registeredStatus, foodRestrictions, applicationStatus};\r\n  }\r\n\r\n  registerFood = async () => {\r\n    const checkInFood = \"https://register.tamuhack.com/api/volunteer/food\";\r\n    console.log(\"Register Food\",       {\r\n      \"email\": this.props.qrData.email,\r\n      \"meal\": this.props.event,\r\n      \"restrictions\": this.props.attribute\r\n    })\r\n\r\n    // Super hacky code, TH22 hotfix\r\n    let new_meal_name = this.props.event + \"\";\r\n    new_meal_name = this.props.attribute != \"V\" ? new_meal_name : this.props.event + \"_V\";\r\n    new_meal_name = this.props.attribute != \"G\" ? new_meal_name : this.props.event + \"_G\";\r\n\r\n    console.log(new_meal_name)\r\n\r\n    await axios.post(checkInFood, \r\n      {\r\n        \"email\": this.props.qrData.email,\r\n        \"meal\": new_meal_name,\r\n        \"restrictions\": this.props.attribute\r\n      },\r\n      {\r\n      headers: {\r\n        authorization: \"Token \" + this.props.userData.data.token,\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      console.log(\"THEN\")\r\n      toast.success(\"User scan successful.\", commonToastProperties);\r\n    }).catch(exception => {\r\n      console.log(\"CATCH\", exception)\r\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\r\n    });\r\n  };\r\n\r\n  registerWorkshop = async () => {\r\n    const checkInWorkshop = \"https://register.tamuhack.com/api/volunteer/workshops\";\r\n\r\n    await axios.post(checkInWorkshop, \r\n      {\r\n        \"email\": this.props.qrData.email,\r\n      },\r\n      {\r\n      headers: {\r\n        authorization: \"Token \" + this.props.userData.data.token,\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      toast.success(\"User scan successful.\", commonToastProperties);\r\n    }).catch(exception => {\r\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\r\n    });\r\n  }\r\n\r\n  checkInUser = async () => {\r\n    const checkInUrl = \"https://register.tamuhack.com/api/volunteer/checkin\";\r\n\r\n    await axios.post(checkInUrl, \r\n      {\r\n        \"email\": this.props.qrData.email\r\n      },\r\n      {\r\n      headers: {\r\n        authorization: \"Token \" + this.props.userData.data.token,\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      toast.success(\"User scan successful.\", commonToastProperties);\r\n      this.setState({ participantRegistered: true });\r\n    }).catch(exception => {\r\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\r\n      this.setState({participantRegistered: false});\r\n    });\r\n  };\r\n\r\n  checkInEvent = async () => {\r\n    const event = this.props.event;\r\n\r\n    if(event === \"checked_in\") {\r\n      await this.checkInUser();\r\n    } else if(event === \"WorkshopEvent\") {\r\n      await this.registerWorkshop();\r\n    } else {\r\n      await this.registerFood();\r\n    }\r\n  }\r\n\r\n  disableSubmit = (registrationStatus) => {\r\n    if(this.props.event === \"checked_in\") {\r\n      return registrationStatus;\r\n    }\r\n\r\n    return !registrationStatus;\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const {registeredStatus, foodRestrictions, applicationStatus} = await this.getRegisteredStatus(this.props.qrData.email);\r\n    const disableStatus = this.disableSubmit(registeredStatus);\r\n    this.setState({ participantRegistered: registeredStatus, foodRestrictions: foodRestrictions, applicationStatus, disableSubmit: disableStatus});\r\n  }\r\n\r\n  render() {\r\n    var eventName = \"\";\r\n    var attribute = this.state.foodRestrictions === \"None\" ? \"No Food Restrictions\" : this.state.foodRestrictions;\r\n    var buttonTitle = \"Scan\";\r\n\r\n    if(this.props.event === 'checked_in') {\r\n      eventName = \"Check In\";\r\n      attribute = \"No Attribute\";\r\n      buttonTitle = \"Check In\";\r\n    } else if(this.props.event === 'WorkshopEvent') {\r\n      eventName = \"Workshop\";\r\n      attribute = \"No Attribute\";\r\n    }\r\n\r\n    var applicationStateText = {\r\n      \"P\": \"PENDING\",\r\n      \"R\": \"REJECTED\",\r\n      \"A\": \"ADMITTED\",\r\n      \"C\": \"NOT CHECKED IN\",\r\n      \"X\": \"DECLINED\",\r\n      \"I\": \"CHECKED IN\",\r\n      \"E\": \"EXPIRED\",\r\n      \"L\": \"LOADING\"\r\n    }\r\n\r\n    return (\r\n    <div style={style.modalContainer}>\r\n        <Rodal \r\n          visible={this.props.modalVisible} \r\n          onClose={this.props.closeModal}\r\n          animation=\"slideUp\"\r\n          width={'70vw'}\r\n          height={350}\r\n          customStyles={{ marginBottom: 0, justifyContent: 'flex-end', paddingLeft: 25, paddingRight: 25 }}\r\n        >\r\n          <div style={style.badgeContainer}>\r\n            <Badge style={{ marginRight: 15, padding: 10, backgroundColor: '#FFD9D9', fontSize: 15 }}>\r\n              {eventName}\r\n            </Badge>\r\n            <Badge style={{ padding: 10, backgroundColor: '#D9EFFF', fontSize: 15 }}>\r\n              {attribute}\r\n            </Badge>\r\n          </div>\r\n          <div>\r\n            <p style={{ display: 'flex', fontSize: 23, fontWeight: 'bold' }}>{this.props.qrData.first_name} {this.props.qrData.last_name}</p>\r\n          </div>\r\n          <div style={style.emailRow}>\r\n            <p style={{ fontSize: 16, fontWeight: 'bold', margin: 0, paddingLeft: 0}}>\r\n              Email\r\n            </p>\r\n            <p style={{ fontSize: 14, margin: 0 }}>\r\n              {this.props.qrData.email}\r\n            </p>\r\n          </div>\r\n          <div style={{...style.checkInStatusRow, borderColor: this.state.participantRegistered ? '#5CD059' : '#FFBFBF', fontSize: 20}}>\r\n            <p style={{ display: 'flex', margin: 0, padding: 0}}>\r\n              {applicationStateText[this.state.applicationStatus]}\r\n              {/* {this.state.participantRegistered ? 'CHECKED IN' : 'NOT CHECKED IN'} */}\r\n            </p>\r\n          </div>\r\n          <Button block\r\n            style={style.confirmButton}\r\n            disabled={this.state.disableSubmit}\r\n            onClick={this.checkInEvent}\r\n          >\r\n            {buttonTitle}\r\n          </Button>\r\n\r\n        </Rodal>\r\n        <ToastContainer autoClose={1500} />\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n    const style : { [key: string]: React.CSSProperties } = {\r\n        modalContainer: {\r\n            display: 'flex',\r\n            backgroundColor: 'white',\r\n            height: 350,\r\n            padding: 30,\r\n        },\r\n        checkInStatusRow: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            borderWidth: '5px',\r\n            borderStyle: 'solid',\r\n            marginBottom: 50,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        },\r\n        emailRow: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: 0,\r\n            paddingBottom: 10,\r\n            marginBottom: 20,\r\n            borderBottom: '1px #DEDEDE solid',\r\n        },\r\n        confirmButton: {\r\n            // display: 'flex', Firefox issues\r\n            justifyContent: 'center', \r\n            width: '100%', \r\n            height: '60px', \r\n            backgroundColor: '#FF7C93', \r\n            border: '0', \r\n            fontSize: '18px'\r\n        },\r\n        badgeContainer: {\r\n            display: 'flex', \r\n            flexDirection: 'row', \r\n            paddingBottom: 0, \r\n            marginBottom: 15\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => ({\r\n        event: state.selection.event,\r\n        attribute: state.selection.attribute,\r\n        userData: state.auth.userData,\r\n    });\r\n\r\n    export default connect(mapStateToProps)(ConfirmModal);\r\n  \r\n","import { AppActions } from '../../types/actions';\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const selectionSuccess = ( event: string, attribute: string ): AppActions => ({\r\n  type: 'SELECTION_SUCCESS',\r\n  event,\r\n  attribute\r\n});\r\n\r\nexport const updateSelection = (event: string, attribute: string) => {\r\n  return (dispatch: Dispatch<AppActions>) => {\r\n    dispatch(selectionSuccess(event, attribute));\r\n  };\r\n};\r\n","import Navbar from 'react-bootstrap/Navbar'\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../redux/actions/authActions';\r\nimport { connect } from 'react-redux';\r\n\r\n/*\r\n    Props leftIconSrc and rightIconSrc have to match the name exactly of the .svg file in @/src/assets\r\n*/\r\ninterface IProps {\r\n    leftIconSrc? : string;\r\n    rightIconSrc? : string;\r\n    leftRedirectRoute? : string;\r\n    rightRedirectRoute? : string;\r\n    logout: () => void;\r\n    /*\r\n        TODO: Have the sources to redirect when clicked\r\n    */\r\n}\r\n\r\ninterface IState {\r\n    leftRedirect: boolean;\r\n    rightRedirect: boolean;\r\n    middleRedirect: boolean;\r\n}\r\n\r\nclass TopNavbar extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {leftRedirect: false, rightRedirect: false, middleRedirect: false};\r\n  }\r\n\r\n  redirect = (redirectRoute: string) => {\r\n    if(redirectRoute === \"/\") {\r\n        this.props.logout();\r\n    }\r\n    return <Redirect to={redirectRoute} />\r\n  }\r\n\r\n  onLeftPress = () => {\r\n    this.setState({ leftRedirect: true });\r\n  }\r\n\r\n  onRightPress = () => {\r\n    this.setState({ rightRedirect: true });\r\n  }\r\n\r\n  onMiddlePress = () => {\r\n      this.setState({ middleRedirect: true });\r\n  }\r\n\r\n  render() {\r\n    var {\r\n        leftIconSrc,\r\n        rightIconSrc,\r\n        leftRedirectRoute,\r\n        rightRedirectRoute\r\n    } = this.props;\r\n\r\n    var leftIcon = leftIconSrc ? (\r\n        <img \r\n            alt=\"\"\r\n            src={require(`../assets/${leftIconSrc}.svg`)}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n        />\r\n    ) : undefined\r\n\r\n    var rightIcon = rightIconSrc ? (\r\n        <img \r\n            alt=\"\"\r\n            src={require(`../assets/${rightIconSrc}.svg`)}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n        />\r\n    ) : undefined\r\n\r\n    if (this.state.leftRedirect && this.props.leftRedirectRoute !== undefined) {\r\n        return this.redirect(this.props.leftRedirectRoute);\r\n    }\r\n\r\n    if (this.state.rightRedirect && this.props.rightRedirectRoute !== undefined) {\r\n        return this.redirect(this.props.rightRedirectRoute);\r\n    }\r\n\r\n    if(this.state.middleRedirect) {\r\n        return this.redirect(\"/select\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar style={style.navSpacing}>\r\n                <Navbar style={style.navSpacing}>\r\n                    {/* TODO: Update href */}\r\n                    <Navbar.Brand onClick={this.onLeftPress} style={style.logoContainer}>\r\n                        {leftIcon}\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar style={style.navSpacing}>\r\n                    {/* TODO: Update href */}\r\n                    <Navbar.Brand style={style.logoContainer}>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={require(\"../assets/hiss.svg\")}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar style={style.navSpacing}>\r\n                    {/* TODO: Update href */}\r\n                    <Navbar.Brand onClick={this.onRightPress} style={style.logoContainer}>\r\n                        {rightIcon}\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style : { [key: string]: React.CSSProperties } = {\r\n    logoContainer : {\r\n        marginRight: \"0px\",\r\n        width: \"30px\"\r\n    },\r\n    navSpacing: {\r\n        justifyContent: \"space-between\"\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () => dispatch(actions.logout())\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar);\r\n","import React from 'react';\r\nimport QrReader from 'react-qr-reader';\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\nimport { LoginData, QRData } from '../../types/TypeObjects';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { AppActions } from '../../types/actions';\r\nimport * as actions from '../../redux/actions/selectionActions';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'rodal/lib/rodal.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TopNavbar from './../../Components/navbar';\r\nimport Select from 'react-select'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { commonToastProperties } from './../../Components/toast';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ninterface IProps {\r\n  isLoggedIn: boolean;\r\n  isLoading: boolean;\r\n  userData: LoginData;\r\n  error: string;\r\n  event: string;\r\n  attribute: string;\r\n  login: (email: string, password: string) => Promise<object>;\r\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\r\n}\r\n\r\ninterface IState {\r\n  event: string;\r\n  attribute: string;\r\n  qrData: QRData;\r\n  delay: number;\r\n  frontCamera: boolean;\r\n  confirmVisible: boolean;\r\n  redirectToLogin: boolean;\r\n}\r\n\r\nclass QRScan extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {qrData: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n    },\r\n    event: this.props.event,\r\n    attribute: this.props.attribute,\r\n    delay: 500, \r\n    frontCamera: true, \r\n    confirmVisible: false,\r\n    redirectToLogin: false}\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\")\r\n    if(this.props.userData == undefined) {\r\n      toast.error(\"Not Logged In\", {\r\n        ...commonToastProperties, \r\n        onClose: () => this.setState({ redirectToLogin: true })\r\n      });\r\n    }\r\n  }\r\n\r\n  handleScan = async (data: string) => {\r\n    if(data === null || this.state.confirmVisible) {\r\n      return;\r\n    }\r\n    try {\r\n      var qrObj = JSON.parse(data);\r\n      if(Object.prototype.hasOwnProperty.call(qrObj, 'email') && \r\n        Object.prototype.hasOwnProperty.call(qrObj, 'first_name') && \r\n        Object.prototype.hasOwnProperty.call(qrObj, 'last_name')) {\r\n\r\n        this.setState({ qrData: qrObj, confirmVisible: true });\r\n      } else {\r\n        console.log(\"Here 1\")\r\n        toast.success(\"QR scan successful.\", commonToastProperties);\r\n        console.log(\"Here 2\")\r\n      }\r\n    } catch (exception) {\r\n      console.log(\"Here 3\")\r\n      toast.error(\"QRScan Line 81: exception\", {...commonToastProperties, autoClose: 3000});\r\n      console.log(\"Here 4\")\r\n    }\r\n  } \r\n\r\n  switchCamera = () => {\r\n    this.setState({frontCamera: !this.state.frontCamera});\r\n  }\r\n\r\n  show = () => {\r\n    this.setState({ confirmVisible: true });\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({ confirmVisible: false });\r\n  }\r\n\r\n\r\n  // Gets called every time the first select form has an option change.\r\n  eventSelectChange = (option, actions) => {\r\n    var val = option ? option.value : \"\";\r\n    if(val !== \"\") {\r\n      this.props.updateSelection(val, \"NONE\");\r\n    }\r\n    \r\n    this.setState({\r\n      event: val,\r\n      // Every event has a none options so this is the default. Stylistic change \r\n      attribute: \"NONE\"\r\n    })\r\n  }\r\n\r\n  // Gets called every time the second select form has an option change.\r\n  attributeSelectChange = (option, actions) => {\r\n    var val = option ? option.value : \"\";\r\n    if(val !== \"\") {\r\n      this.props.updateSelection(this.props.event, val);\r\n    }\r\n    this.setState({\r\n      attribute: val\r\n    })\r\n  }\r\n\r\n  // Using the event state determine what options to return.\r\n  // These will be displayed on the second dropdown\r\n  determineAttributes = () => {\r\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\r\nvar foodChoices = [\r\n      { value: 'R', label: 'Regular'},\r\n      { value: 'V', label: 'Vegan'},\r\n      { value: 'G', label: 'Gluten Free'}\r\n    ]\r\n    if(this.state.event) {\r\n      // Options must match the eventOptions values\r\n      var options =  {\r\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\r\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ],\r\n        \"B\": foodChoices,\r\n        \"L\": foodChoices,\r\n        \"D\": foodChoices,\r\n        \"MS\": foodChoices,\r\n        \"B2\": foodChoices,\r\n        \"L2\": foodChoices\r\n      }\r\n      return this.state.event in options ? options[this.state.event] : undefined\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  render() {\r\n    var {\r\n      event,\r\n      attribute,\r\n      redirectToLogin\r\n    } = this.state;\r\n\r\n    if(redirectToLogin) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    const cameraString = this.state.frontCamera ? 'user' : 'environment';\r\n\r\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\r\n    const eventOptions = [\r\n      { value: 'checked_in', label: 'Check In' },\r\n      { value: 'WorkshopEvent', label: 'Workshop (ANY)' },\r\n      { value: 'B', label: 'Breakfast (SAT)' },\r\n      { value: 'L', label: 'Lunch (SAT)' },\r\n      { value: 'D', label: 'Dinner' },\r\n      { value: 'MS', label: 'Midnight Snack' },\r\n      { value: 'B2', label: 'Breakfast (SUN)' },\r\n      { value: 'L2', label: 'Lunch (SUN)' }\r\n    ]\r\n\r\n    const attributeOptions = this.determineAttributes()\r\n\r\n    // Formats the individual options in the select tags (react-select)\r\n    const formatGroupLabel = data => (\r\n      <div style={style.groupStyles}>\r\n        <span>{data.label}</span>\r\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <TopNavbar leftIconSrc=\"arrowleft\" rightIconSrc=\"magnifying\" leftRedirectRoute=\"/select\" rightRedirectRoute=\"/search\"/>\r\n        <div style={style.pageContainer}>\r\n          {/* Selection Container */}\r\n          <div style={style.selectionContainer}>\r\n            <div style={style.halfContainer}>\r\n              <Select\r\n                options={eventOptions}\r\n                formatGroupLabel={formatGroupLabel}\r\n                placeholder=\"Event\"\r\n                isClearable={true}\r\n                isSearchable={ false }\r\n                styles={{\r\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\r\n                  menu: provided => ({ ...provided, zIndex: 9999 })\r\n                }}\r\n                defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\r\n                onChange={this.eventSelectChange}\r\n              />\r\n            </div>\r\n            <div style={style.halfContainer}>\r\n              <Select\r\n                options={attributeOptions}\r\n                formatGroupLabel={formatGroupLabel}\r\n                placeholder=\"Attribute\"\r\n                isClearable={true}\r\n                isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\r\n                value= {\r\n                  attribute == \"\" || attributeOptions == undefined ? \r\n                  undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\r\n                }\r\n                styles={{\r\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\r\n                  menu: provided => ({ ...provided, zIndex: 9999 })\r\n                }}\r\n                onChange={this.attributeSelectChange}\r\n                isSearchable={ false }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <QrReader\r\n              style={{width: '100%', marginBottom: 20, alignItems: 'center', alignSelf: 'center', justifyContent: 'center'}}\r\n              delay={this.state.delay}\r\n              onScan={this.handleScan}\r\n              facingMode={cameraString}\r\n            />\r\n            <Button\r\n              style={style.switchCameraContainer}\r\n              onClick={this.switchCamera}>\r\n              Switch Camera\r\n            </Button>\r\n          </div>\r\n          <ConfirmModal \r\n            qrData={this.state.qrData}\r\n            modalVisible={this.state.confirmVisible}\r\n            closeModal={this.hide}\r\n          />\r\n        </div>\r\n\r\n        <ToastContainer autoClose={1500} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style : { [key: string]: React.CSSProperties } = {\r\n  pageContainer : {\r\n    display: 'flex',\r\n    height: 'calc(100vh - 72px)',\r\n    width: '100vw',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'white',\r\n    // paddingTop: '10vh'\r\n  },\r\n  selectionContainer: {\r\n    padding: '30px 10px',\r\n    marginBottom: \"10px\",\r\n    backgroundColor: \"#FF7C93\",\r\n    width: '100vw',\r\n  },\r\n  switchCameraContainer: {\r\n    width: '80vw',\r\n    height: '56px',\r\n    backgroundColor: '#FF7C93',\r\n    border: 0,\r\n    outline: 0\r\n  },\r\n  modalContainer: {\r\n    display: 'flex',\r\n    backgroundColor: 'white',\r\n    height: 350,\r\n    padding: 30,\r\n  },\r\n  checkInStatusRow: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '5px solid #5CD059',\r\n    marginBottom: 50,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  emailRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    paddingTop: 0,\r\n    marginBottom: 20,\r\n    borderBottom: '1px #DEDEDE solid',\r\n  },\r\n\r\n  // Default React-Select styles\r\n  groupBadgeStyles: {\r\n    backgroundColor: '#EBECF0',\r\n    borderRadius: '2em',\r\n    color: '#172B4D',\r\n    display: 'inline-block',\r\n    fontSize: 12,\r\n    fontWeight: 'normal',\r\n    lineHeight: '1',\r\n    minWidth: 1,\r\n    width: \"200px;\",\r\n    padding: '0.16666666666667em 0.5em',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  // Default React-Select styles\r\n  groupStyles: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  halfContainer: {\r\n    width: \"50%\",\r\n    padding: \"0px 5px\",\r\n    display: \"inline-block\"\r\n  }\r\n  \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  event: state.selection.event,\r\n  attribute: state.selection.attribute,\r\n  userData: state.auth.userData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QRScan);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { AppActions } from '../../types/actions';\r\nimport * as actions from '../../redux/actions/selectionActions';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Select from 'react-select'\r\nimport Button from 'react-bootstrap/Button';\r\nimport TopNavbar from './../../Components/navbar';\r\nimport { LoginData } from '../../types/TypeObjects';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { commonToastProperties } from './../../Components/toast';\r\n\r\ninterface IProps {\r\n  event: string;\r\n  attribute: string;\r\n  userData: LoginData,\r\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\r\n}\r\n\r\ninterface IState {\r\n  event: string;\r\n  attribute: string;\r\n  redirectToScan: boolean;\r\n  redirectToLogin: boolean;\r\n}\r\n\r\nclass Selection extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      event: this.props.event,\r\n      attribute: this.props.attribute,\r\n      redirectToScan: false,\r\n      redirectToLogin: false // this.props.userData === undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.userData == undefined) {\r\n      toast.error(\"Not Logged In\", {\r\n        ...commonToastProperties, \r\n        onClose: () => this.setState({ redirectToLogin: true })\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  // Gets called every time the first select form has an option change.\r\n  eventSelectChange = (option, actions) => {\r\n    var val = option ? option.value : \"\";\r\n    this.setState({\r\n      event: val,\r\n      // Every event has a none options so this is the default. Stylistic change \r\n      attribute: \"NONE\"\r\n    })\r\n  }\r\n\r\n  // Gets called every time the second select form has an option change.\r\n  attributeSelectChange = (option, actions) => {\r\n    var val = option ? option.value : \"\";\r\n    this.setState({\r\n      attribute: val\r\n    })\r\n  }\r\n\r\n  // Using the event state determine what options to return.\r\n  // These will be displayed on the second dropdown\r\n  determineAttributes = () => {\r\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\r\n    var foodChoices = [\r\n      { value: 'R', label: 'Regular'},\r\n      { value: 'V', label: 'Vegan'},\r\n      { value: 'G', label: 'Gluten Free'}\r\n    ]\r\n    if(this.state.event) {\r\n      // Options must match the eventOptions values\r\n      var options =  {\r\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\r\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ],\r\n        \"B\": foodChoices,\r\n        \"L\": foodChoices,\r\n        \"D\": foodChoices,\r\n        \"MS\": foodChoices,\r\n        \"B2\": foodChoices,\r\n        \"L2\": foodChoices\r\n      }\r\n      return this.state.event in options ? options[this.state.event] : undefined\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  handleScanSubmit = () => {\r\n    this.props.updateSelection(this.state.event, this.state.attribute);\r\n    this.setState({ redirectToScan: true });\r\n    // TODO Alert user about invalid selection\r\n  }\r\n\r\n  isDisabled = () => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    var {\r\n      event,\r\n      attribute,\r\n      redirectToScan,\r\n      redirectToLogin\r\n    } = this.state;\r\n\r\n    if(redirectToLogin) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    if(redirectToScan) {\r\n      return <Redirect to='/scan' />\r\n    }\r\n\r\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\r\n    \r\n    const eventOptions = [\r\n      { value: 'checked_in', label: 'Check In' },\r\n      { value: 'WorkshopEvent', label: 'Workshop (ANY)' },\r\n      { value: 'B', label: 'Breakfast (SAT)' },\r\n      { value: 'L', label: 'Lunch (SAT)' },\r\n      { value: 'D', label: 'Dinner' },\r\n      { value: 'MS', label: 'Midnight Snack' },\r\n      { value: 'B2', label: 'Breakfast (SUN)' },\r\n      { value: 'L2', label: 'Lunch (SUN)' }\r\n    ]\r\n\r\n    // const eventOptions = [\r\n    //   { value: 'checked_in', label: 'Check In' },\r\n    //   { value: 'BREAKFAST', label: 'Breakfast' },\r\n    //   { value: 'LUNCH', label: 'Lunch' },\r\n    //   { value: 'DINNER', label: 'Dinner' },\r\n    //   { value: 'MIDNIGHT_SNACK', label: 'Midnight Snack' },\r\n    //   { value: 'WorkshopEvent', label: 'Workshop' }\r\n    // ]\r\n\r\n    const attributeOptions = this.determineAttributes()\r\n\r\n    // Formats the individual options in the select tags (react-select)\r\n    const formatGroupLabel = data => (\r\n      <div style={style.groupStyles}>\r\n        <span>{data.label}</span>\r\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <TopNavbar rightIconSrc=\"logout\" rightRedirectRoute=\"/\" />\r\n        <div style={style.pageContainer}>\r\n          <h2 style={{ fontSize: '36px', color: \"#FF7C93\", marginBottom: \"40px\" }}>\r\n            Select a scan...\r\n          </h2>\r\n\r\n          {/* React-Select component */}\r\n          <Select\r\n            options={eventOptions}\r\n            formatGroupLabel={formatGroupLabel}\r\n            placeholder=\"Event\"\r\n            isClearable={true}\r\n            isSearchable={ false }\r\n            // Uses the event state to determine if any objects in the eventOptions array have a value equal to event. \r\n            //  If so, return the first object where this is valid. (This logic is repeated 4 times) to select the defaul. \r\n            defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\r\n            onChange={this.eventSelectChange}\r\n          />\r\n          <br />\r\n\r\n          {/* React-Select component */}\r\n          <Select\r\n            options={attributeOptions}\r\n            formatGroupLabel={formatGroupLabel}\r\n            placeholder=\"Attribute\"\r\n            isClearable={true}\r\n            isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\r\n            value= {\r\n              attribute == \"\" || attributeOptions == undefined ? \r\n              undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\r\n            }\r\n            onChange={this.attributeSelectChange}\r\n            isSearchable={ false }\r\n          />\r\n          <br />\r\n\r\n          <Button block\r\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\r\n            onClick={this.handleScanSubmit}\r\n            disabled={! (event && attribute)}\r\n          >\r\n            Start Scanning\r\n          </Button>\r\n        </div>\r\n\r\n        <ToastContainer autoClose={1500} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst style : { [key: string]: React.CSSProperties } = {\r\n\r\n  // Changed, no longer flex and MarginTop is hardcoded\r\n  pageContainer : {\r\n    padding: \"20px\",\r\n    marginTop: \"12vh\",\r\n    width: '100vw',\r\n  },\r\n\r\n  // Default React-Select styles\r\n  groupBadgeStyles: {\r\n    backgroundColor: '#EBECF0',\r\n    borderRadius: '2em',\r\n    color: '#172B4D',\r\n    display: 'inline-block',\r\n    fontSize: 12,\r\n    fontWeight: 'normal',\r\n    lineHeight: '1',\r\n    minWidth: 1,\r\n    width: \"200px;\",\r\n    padding: '0.16666666666667em 0.5em',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  // Default React-Select styles\r\n  groupStyles: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  event: state.selection.event,\r\n  attribute: state.selection.attribute,\r\n  userData: state.auth.userData\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport axios from 'axios';\r\nimport TopNavbar from './../../Components/navbar';\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\nimport { QRData, LoginData } from '../../types/TypeObjects';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { commonToastProperties } from './../../Components/toast';\r\n\r\ninterface IProps {\r\n  event: string;\r\n  token: number\r\n  attribute: string;\r\n  userData: LoginData;\r\n}\r\n\r\ninterface IState {\r\n    event: string;\r\n    attribute: string;\r\n\r\n    name: string;\r\n    displayUsers: boolean;\r\n    users: Array<any>;\r\n\r\n    modalVisible: boolean;\r\n    participantData: QRData;\r\n\r\n    redirectToLogin: boolean;\r\n}\r\n\r\nclass Selection extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        event: \"\",\r\n        attribute: \"\",\r\n        name: \"\",\r\n\r\n        displayUsers: false,\r\n        users: [],\r\n\r\n        modalVisible: false,\r\n        participantData: {\r\n          \"email\": \"\",\r\n          \"first_name\": \"\",\r\n          \"last_name\": \"\"\r\n        },\r\n\r\n        redirectToLogin: false // this.props.userData === undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.userData == undefined) {\r\n      toast.error(\"Not Logged In\", {\r\n        ...commonToastProperties, \r\n        onClose: () => this.setState({ redirectToLogin: true })\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ modalVisible: true });\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ modalVisible: false });\r\n  }\r\n  \r\n  setParticipantData = (user) => {\r\n    this.setState({ participantData: user}, () => {\r\n      this.setState({ modalVisible: true });\r\n    });\r\n  }\r\n\r\n  nameHandler = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  // Calls the api/volunteer/search endpoint\r\n  // NOTE: There is no hard cap or limit checking. A person can type \" \" and get every user for instance\r\n  handleSearchSubmit = () => {\r\n    var {\r\n      name,\r\n      event,\r\n      attribute\r\n    } = this.state\r\n\r\n    // Token taken from Redux State\r\n    // This will get reset each server restart. This means you will have to visit the login page again.\r\n \r\n    var token = this.props.userData.data.token;\r\n\r\n    if(name && token) {\r\n      return axios.get(\r\n        `https://register.tamuhack.com/api/volunteer/search?q=${name}`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Token ${token}`\r\n          }\r\n        }\r\n      ).then(response => {\r\n        var responseData = response.data.results\r\n        \r\n        if(responseData.length == 0) {\r\n          toast.warn(\"Search found no users.\", commonToastProperties);\r\n        } else {\r\n          toast.success(`Search found ${responseData.length} user${responseData.length == 1 ? '': 's'}.`, commonToastProperties);\r\n        }\r\n        this.setState({users: responseData})\r\n      }).catch(error => {\r\n        toast.error(\"Invalid API Call\", {...commonToastProperties, autoClose: 3000});\r\n      });\r\n    } else {\r\n      toast.error(\"Invalid API Call\", {...commonToastProperties, autoClose: 3000});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var {\r\n        name,\r\n        users,\r\n        redirectToLogin\r\n    } = this.state;\r\n\r\n    if(redirectToLogin) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    if(this.props.userData === undefined) {\r\n      console.log('ERROR')\r\n      toast.error(\"Not Logged In\", {\r\n        ...commonToastProperties, \r\n        onClose: () => this.setState({ redirectToLogin: true })\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <TopNavbar leftIconSrc=\"arrowleft\" leftRedirectRoute=\"/scan\"/>\r\n        <div style={style.pageContainer}>\r\n          <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                  style={{fontSize: \"18px\"}}\r\n                  placeholder=\"Search User\"\r\n                  onChange={this.nameHandler}\r\n              />\r\n          </InputGroup>\r\n\r\n          <Button block\r\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\r\n            onClick={this.handleSearchSubmit}\r\n            disabled={! (name)}\r\n            size=\"lg\"\r\n          > Search </Button>\r\n          <div style={{marginTop: \"10px\"}}>\r\n              {\r\n                // For each user \r\n                users.map((user, index) => {\r\n                    // Return this HTML \r\n                    return (\r\n                        <div onClick={() => this.setParticipantData(user)} style={{borderTop: \"1px solid black\", padding: \"5px 0px 5px 0px\"}} key={index}>\r\n                            <h5 style={{margin: \"0px\"}}>\r\n                                {user.first_name} {user.last_name}\r\n                                <span style={{float: 'right', marginTop: \"4px\"}}>\r\n                                  <svg style={{width: \"40px\", height: \"40px\"}} viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n                                </span>\r\n                            </h5>\r\n                            <p style={{margin: \"0px\"}}>\r\n                                {user.email}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                })\r\n              }\r\n          </div>\r\n          <ConfirmModal\r\n            qrData={this.state.participantData}\r\n            modalVisible={this.state.modalVisible}\r\n            closeModal={this.closeModal}\r\n          />\r\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\r\n          <ToastContainer autoClose={1500} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst style : { [key: string]: React.CSSProperties } = {\r\n  pageContainer : {\r\n    padding: \"20px\",\r\n    marginTop: \"20px\",\r\n    width: '100vw',\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userData: state.auth.userData\r\n  /*event: state.selection.eventName,\r\n  attribute: state.selection.attribute,*/\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  /*login: (email:string, password:string) => dispatch(actions.login(email, password))*/\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);","import React from 'react';\r\nimport { HashRouter, Switch, Route, Router } from 'react-router-dom';\r\nimport Login from './Login/Login';\r\nimport QRScan from './QRScan/QRScan';\r\nimport Selection from './Selection/Selection';\r\nimport Search from './Search/Search';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename='/'>\r\n        <Switch>\r\n          <Route path={'/scan'} component={QRScan} />\r\n          <Route path={'/select'} component={Selection} />\r\n          <Route path={'/search'} component={Search} />\r\n          <Route path={'/'} component={Login} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { AuthActionTypes } from '../../types/actions';\r\n\r\nconst INITIAL_STATE: object = {\r\n  isLoggedIn: false,\r\n  isLoading: false,\r\n  userData: undefined,\r\n  error: undefined\r\n};\r\n\r\nexport default function auth(state = INITIAL_STATE, action: AuthActionTypes): object {\r\n  switch (action.type) {\r\n    case 'LOGIN_ATTEMPT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isLoggedIn: false\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: true,\r\n        userData: action.userData,\r\n        error: undefined\r\n      };\r\n    case 'LOGIN_FAILED':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: false,\r\n        error: action.error\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        userData: undefined,\r\n        isLoading: false,\r\n        isLoggedIn: false,\r\n        error: undefined\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SelectionActionTypes } from '../../types/actions';\r\n\r\nconst INITIAL_STATE: object = {\r\n  event: \"\",\r\n  attribute: \"\"\r\n};\r\n\r\nexport default function selection(state = INITIAL_STATE, action: SelectionActionTypes): object {\r\n  switch (action.type) {\r\n    case 'SELECTION_SUCCESS':\r\n      return {\r\n        event: action.event,\r\n        attribute: action.attribute\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './authReducer';\r\nimport selection from './selectionReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  selection\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/index';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n}\r\n\r\nconst reducers = persistReducer(persistConfig, rootReducer);\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    undefined,\r\n    compose(applyMiddleware(...middlewares))\r\n)\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './Pages/Routes';\r\nimport Login from './Pages/Login/Login';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ReduxApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <Routes />\r\n        </PersistGate>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(<ReduxApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/hiss_full_logo.d26ff6ed.svg\";","var map = {\n\t\"./arrowleft.svg\": 104,\n\t\"./arrowright.svg\": 105,\n\t\"./hiss.svg\": 59,\n\t\"./hiss_full_logo.svg\": 56,\n\t\"./isymbol.svg\": 106,\n\t\"./logout.svg\": 107,\n\t\"./magnifying.svg\": 108\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","module.exports = __webpack_public_path__ + \"static/media/hiss.225cb576.svg\";"],"sourceRoot":""}